в чём разница
---------------------------------------------------------------------------------------
=Jolly Roger=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=140&prc=25&Itemid=57#p21694
Люди, просветите: 
Зачем вообще нужен *PL? 
На практике не вижу разницы между 
*PL'жил был у бабушки серенький козлик'  и 'жил был у бабушки серенький козлик' 
Заранее спасибо.

=bkz=
На практике разницы и нет, одно сокращенное написание другого. roll

---------------------------------------------------------------------------------------
=CH_B_L=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=174&prc=25&Itemid=57#p23889
Ещё пара вопросов: в чем отличия в qsp у ' ' от " "? И второй: как в qsp можно часть строки сделать, скажем, курсивом, а часть - нормальной?

=Aleks Versus=
Отличий нет. Два типа "кавычек", насколько я понимаю, введены как раз для таких случаев, когда нужно использовать один из них в строке. 

Курсив, жирность и прочее делаются с помощью html-тегов. Чтобы теги работали, на самой первой локации в игре пишешь: 

Код:
usehtml=1
Курсив: 

Код:
*pl "<i>Этот текст будет написан курсивом.</i> А этот текст будет написан без курсива."
На самом деле есть разница: когда записываешь код для DYNAMIC в фигурных скобках, а когда -- в кавычках. Заключается она в том, что в фигурных скобках нельзя использовать подвыражения типа: 

Код:
*pl "Полная защита доспеха: <<защита_перчатки + защита_сапоги + защита_кираса + защита_шлем + защита_штаны>>"
в угловые скобки здесь помещено подвыражение, которое будет вычислено и результат станет частью строки. Т.е. на экране появится что-то вроде: 

Полная защита доспеха: 117 

Если же ты попытаешься засунуть то же самое в фигурные скобки, а не в кавычки (при отключенном html) 

Код:
*pl {Полная защита доспеха: <<защита_перчатки + защита_сапоги + защита_кираса + защита_шлем + защита_штаны>>}
на экране появится вся надпись: 

Полная защита доспеха: <<защита_перчатки + защита_сапоги + защита_кираса + защита_шлем + защита_штаны>>
---------------------------------------------------------------------------------------
=oleksandrigo=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=208&prc=25&Itemid=57#p26396
*pl "<<$args[0]>>" 
*pl $args[0] 
Чем отличаются эти две команды? 
Просто показывает обе, но вот в почему не пойму.

=Aleks Versus=
результат их работы идентичен. А вот работают они по-разному. 

Когда плеер встречает первую команду, он видит подвыражение в строке. Сначала он получает значение $args[0] и подставляет его вместо подвыражения. Таким образом теперь у него получается текстовая константа. Он берёт её значение и передаёт оператору *pl. Оператор выводит значение на экран. 

Когда плеер встречает вторую команду, он сразу берёт значение $args[0] и передаёт оператору *pl. 

Первая команда — двойная работа для плеера. Ну это условно. Она выполняется где-то в 1,3 раза дольше.
---------------------------------------------------------------------------------------
=WastedCarl=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=209&prc=25&Itemid=57#p26408
Какая разница между названием переменной с $ и без $ ?

=Aleks Versus=
внимательнее читай справку. 
Знак $ ставится перед названием ТЕКСТОВОЙ переменной 
'4'+'5' — это конкатенация строк. Склейка. Ты склеил текст '4' и текст '5'. Получилась строка '45', а не число, как тебе объяснил oleksandrigo. 

Переменная $gld не меняется, потому что она текстовая. А переменная gld — числовая.
------------------------------------------------------------------------------
=oleksandrigo=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=211&prc=25&Itemid=57#p26532
Задам достаточно странный вопрос: 

Код:

set x = 1 
let x = 1 
x = 1 
Может между ними есть хоть какая-то разница? 

Ибо я никакой не заметил 

=Aleks Versus=
Никакой разницы нет. set и let — устаревшие операторы, выполнявшие ровно то же самое.