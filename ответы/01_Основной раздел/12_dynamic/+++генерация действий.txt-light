генерация действий

--------------------------------------------------------------------
=Strom=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=115&prc=25&Itemid=57#p20054
Народ, есть один вопрос. У меня есть код:

ncm=0 
:цикл 
If ncm<=np: 
	n[ncm]=ncm 
	*pl'<a href="EXEC:gs ''Инвентарь персонажа'',n[ncm]"><<$char[ncm]>></a>' 
	ncm=ncm+1 
	jump 'цикл' 
end

Код работает таким образом: выводит имена персонажей в виде ссылок в зависимости от количества персонажей. Они нумеруются начиная с нуля и их количество хранит переменная "np". Думаю с циклом вывода всё понятно. Меня интересует массив "n[ncm]" в операторе GS. Почему-то в строке

*pl'<a href="EXEC:gs ''Инвентарь персонажа'',n[ncm]"><<$char[ncm]>></a>'

значение элемента массива "n[ncm]" после оператора GS всегда приравнивается к нулю. Из-за этого я не могу реализовать вывод данных, в которых бы использовалась переменная из массива ARGS, которая передается с оператором GS. Вопрос: это невозможно сделать в QSP, или у меня что-то не правильно в коде?

=Nex=
это классическая "грабля". 

Нюанс заключается в том, что при нажатии ссылки, значения переменных будут посчитаны на момент нажатия, а не на момент прохождения очередного шага цикла. 

В приведённом примере, решается достаточно просто. Нужно принудительно вычислить значения переменных в шаге цикла, сразу подставив готовые значения в строку. Это делается с помощью механизма "подвыражений", обозначается двойными угловыми скобками. 

! Неправильно: 
! <a href="EXEC:GS 'Инвентарь персонажа', np">Хвост</a> 
*PL '<a href="EXEC:GS ''Инвентарь персонажа'', n[ncm]"><<$char[ncm]>></a>' 

! Правильно: 
! <a href="EXEC:GS 'Инвентарь персонажа', 0">Хвост</a> 
*PL '<a href="EXEC:GS ''Инвентарь персонажа'', <<ncm>>"><<$char[ncm]>></a>'
---------------------------------------------------------------------------------
=Dark=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=140&prc=25&Itemid=57#p21696
n=1 
max=3 

:a 

If n<max: 
act 'choose'+n: 
  $user[n]=$player[n]+' (You)' 
delobj $player[n] 
addobj $user[n] 
cla 
end 
n=n+1 
jump 'a' 
end

Понимаю, что во всех актах одно и то же N, но что с этим делать?

=Nex=
dynamic
http://wiki.qsp.su/help:dynamical

Вывод действий в цикле с передачей параметров
http://qsp.su/index.php?option=com_agora&task=topic&id=530&Itemid=57

=Aleks Versus=
n=1 
max=3 

:a 

If n<max: 
   dynamic "act 'choose'+<<n>>: 
     $user[<<n>>]=$player[<<n>>]+' (You)' 
     delobj $player[<<n>>] 
     addobj $user[<<n>>] 
     cla 
   end " 
   n=n+1 
   jump 'a' 
end
-----------------------------------------------------------------------------------------
=Адри=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=183&prc=25&Itemid=57#p24437
Помогите, пожалуйста, разобраться в решении задачи. 
Игрок создает персонажей. Их количество может доходить до 1 000. Каждому персонажу присваивается ID, Имя и куча других характеристик. Какой персонаж участвует в бою будет определяться по ID, а дальше будут подгружаться остальные характеристики. 
Пример параметров, отвечающих за характеристики: Здоровье[1002], $Имя[1002], Атака[1002] ... 

Задача состоит в том, чтобы сформировать список всех персонажей, которые создал игрок и при нажатии на него получить информацию об его характеристиках. Проблема в том, что список удалось создать, но передать каждому персонажу (в примере они создали с помощью ACT) значение ID - не получается. 

Есть ли какой нибудь способ сделать это? Прописать каждому персонажу свой ID - не реально. 



Код:
НачID = 1000 !Начальный ID 
:ЦИКЛ 
!Создает действие для каждого персонажа 
act $Надпись&$Имя[НачID] :  
    ТекID = НачID !Должен присваиваться уникальный ID, но присваивает ID последнего персонажа 
    goto "Карточка персонажа" !Переходит на локацию, где отображаются все параметры персонажа 
end 
!Повторное выполнение действий или прекращение 
НачID += 1 
if НачID < ID : jump "ЦИКЛ" 
С данным кодом игра всегда открывает информацию о последнем персонаже (все из-за ТекID = НачID), при нажатии на любого.

=Aleks Versus=
ебе поможет оператор dynamic. 

Код:
dynamic "act '<<$Надпись+$Имя[НачID]>>':  
    ТекID = <<НачID>> & !Должен присваиваться уникальный ID, но присваивает ID последнего персонажа 
    goto 'Карточка персонажа' & !Переходит на локацию, где отображаются все параметры персонажа 
end"
На локацию "карточка персонажа" можно передавать аргумент, который там на этой локации персонажа будет храниться в переменной args[0], поэтому если не критично ТекID вообще можно не использовать. 

Код:
dynamic "act '<<$Надпись+$Имя[НачID]>>':  
    goto 'Карточка персонажа',<<НачID>> & !Переходит на локацию, где отображаются все параметры персонажа 
end"
Почитай справку о подвыражениях <<>>. Старайся не использовать & для конкатенации - тяжело читать код. Старайся не использовать в имени переменной одновременно латиницу и кириллицу - легко запутаться: ТекID, TeкID, ТeкID - разные переменные. 

А ошибка твоя заключалась в том, что когда создаётся действие, код действия сам по себе НЕ ВЫПОЛНЯЕТСЯ, и получается, ты в каждое действие записал строку 

Код:
ТекID = НачID
А поскольку в конце цикла НачID присваивается последнее значение, то при щелчке по любому действию и переменной ТекID присваивается последнее значение НачID, как ты программе и указал. dynamic же в данном случае вычисляет подвыражение и вместо ТекID = НачID ставит в каждое действие правильную строку ТекID = 1, ТекID = 2 и т.д.
-----------------------------------------------------------------------
=St-john=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=185&prc=25&Itemid=57#p24572
У меня другой вопрос, с виду несложный, но я не допру никак. Как в коде ниже при генерации действий сделать так чтобы получились связанные действия и реакция на него? То есть: act 'действие1' и gs 'ttt',1; act 'действие2' и gs 'ttt',2 и так далее. Пока же выходит что все gs = gs 'ttt',<<последнее значение i>>. 

:loopAct 
if i < arrsize ('$MMM'):    
        act '<<$MMM[i]>>': 
        gs 'ttt',i 
        end        
i+=1 
jump 'loopAct' 
end 

=Nex=
как раз для этого используется оператор DYNAMIC.

=Aleks Versus=
две страницы назад я объяснял (объяснял вроде?) про dynamic. 
Когда ты создаёшь действие: 

act '<<$MMM[i]>>': 
        gs 'ttt',i 
end

Получается действие, в котором лишь одна строчка кода: 

gs 'ttt',i

И как ты думаешь, какое значение примет i при щелчке по этому действию? Конечно же то, которое ты в него записал последний раз. Т.е., исходя из цикла, оно будет равным размеру массива. 
Оператор dynamic выполняет код, записанный в виде строки, как если бы он был напрямую записан в программе. Но, прежде чем этот код будет выполнен, движок вычисляет подвыражения (двойные угловые скобки). 
Вот тебе пример: 

i = 12 
dynamic "*pl <<i*12>>"

Сначала плеер вычислит подвыражение i*12 и получит результат 144. 
Потом оператор dynamic прочитает строку, которую ему дали и выполнит: 

*pl 144

Что выведет на экран число 144. 
Применительно к твоим действиям надо делать так: 

Код:
dynamic "act '<<$MMM[i]>>': 
        gs 'ttt',<<i>> 
end"
Тогда каждое действие будет обладать строкой уникального кода, не gs 'ttt',i а gs 'ttt',1;   gs 'ttt',2; и т.д.
