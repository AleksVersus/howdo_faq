динамические предметы

----------------------------------------------------------------------------
=Одиночка=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=115&prc=25&Itemid=57#p20004
addobj 'Здоровье: <<$Здоровье>> ед.' Добавил в инвентарь, но при изменении переменной здесь ничего не высвечивается, что делать?

=Storm=
а зачем тебе здоровье выводить в инвентаре, если это можно сделать в дополнительном окне. Чтобы переменная изменялась в инвентаре тебе нужно обновлять его каждый раз, когда изменяется твоя переменная "Здоровье". Только зачем ты поставил перед ней знак "$"? Он ставиться для того, если ты задаешь строчную переменную, а не целочисленную. Со строчной переменной ты не сможешь производить действия отнимания и добавления здоровья. 
По поводу обновления инвентаря. Если ты действительно хочешь оставить здоровье там, то тебе каждый раз при его изменении надо будет выполнять такой код:

delobj 'Здоровье: <<Здоровье>> ед.' 
addobj 'Здоровье: <<Здоровье>> ед.'
------------------------------------------------------------------------------
=Белый Шарик=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=118&prc=25&Itemid=57#p20330
А вот еще появился вопросик. Как сделать, что бы однотипные предметы в инвентарь попадали не отдельными строками, а складывались в одну строку с указанием количества? 

Инвентарь: 
Гвоздь 5 
доска 10 

В вики нашел, что это делается с помощью служебных локаций.  Но пока про служебные локации вообще не понял без простых примеров...

=svandrus=
Ссылка на FAQ 
FAQ
http://qsp.su/index.php?option=com_agora&task=topic&id=316&Itemid=57

Ccылка на считаемые предметы.. 
http://qsp.su/index.php?option=com_content&view=article&id=70:qsp-inventory-advanced-lib-076&catid=36:2009-02-19-06-11-21&Itemid=76
http://qsp.su/index.php?option=com_content&task=view&id=59&Itemid=56&limitstart=6

$COUNTER = 'Локация-счетчик' 
Код на локации 'Локация-счетчик' выполняется сам, постоянно, через заданные промежутки времени (2 раза в секунду, по умолчанию). 
Туда можно время засунуть, ну и много чего ещё... 
$ONNEWLOC = 'Проверка' 
Код на локации 'Проверка' выполняется каждый раз при переходе на новую локацию, аналогично конструкции: 
gs 'Проверка' 
Удобно, чтобы не прописывать gs на каждой локации.

=BiK=
Белый Шарик 

Можно сделать проще: 

Создаешь предмет, к примеру «Ресурсы», пишешь там: 

clr 
pl 'Доски <<dosky>> шт.' 
pl 'Гвозди <<gvozdy>> шт.'

При нажатии на этот предмет в окно дополнительного описания будет выводится информации о количестве предметов. В начале прописываешь стартовое количество этих предметов: 

dosky = 0 
gvozdy = 0 

А дальше в действиях где изменяется это количество предметов пишешь к примеру: 

Получение предмета. 

Act 'Купить доски' : 
  dosky = dosky + 5 
End

Трата предметов. 

Act 'Построить скамейку' : 
	if gvozdy<10 or dosky<20 : 
		*pl 'Недостаточно ресурсов' 
	else 
		dosky = dosky - 10 
		gvozdy = gvozdy - 20 
		*pl 'Вы построили скамейку.' 
	End 
End

=Белый Шарик=
Урааа! Спасибо, svandrus, получилось! Ток я без наворотов со склонениями. 

act 'купить гвозди': 
	delobj $гвозди_инвентарь 
	гвозди += 1 
	$гвозди_инвентарь = 'гвозди ' + гвозди + ' шт' 
	clr 
	addobj $гвозди_инвентарь 
	gt $curloc 
end 
if гвозди > 0: 
	act 'продать гвозди': 
		delobj $гвозди_инвентарь 
		гвозди -= 1 
		$гвозди_инвентарь = 'гвозди ' + гвозди + ' шт' 
		addobj $гвозди_инвентарь 
		gt $curloc 
	end 
else
	pl 'Нет гвоздей в наличи' 
	gt $curloc    
end 

Представляю масштабы, если придется допустим для 100 объектов подобные блоки писать. 

У меня опять несколько вопросиков: 
1) А разъясните пжл  популярно, зачем необходимы массивы? Я так понял это те же переменные, только объединенные по какому-то признаку с присвоением единого имени и индексов. В чем полезность использования массивов вместо простых переменных? 

2) В некоторых кодах встречал следующую строку delact $selact 
Насколько я понимаю эта строка удаляет последнее выбранное действие из списка доступных действий? Нет? 

3) Подскажите какой-нибудь хелп, не слишком заумный, по оформлению внешнего вида игры. Шрифты, цвета, расположение текстов на экране.
---------------------------------------------------------------------------
=rutigl=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=120&prc=25&Itemid=57#p20499 #удаление_предмета_по_индексу #предметы
Простите, я опять с глупым вопросом. 
Я добавляю деньги в инвентарь: 

Код:

ADDOBJ 'деньги - 15 золотых' 
gold_index = COUNTOBJ 
gold = 15 
SHOWOBJS 1 

Пока все в порядке. 
Если я хочу обновить количество денег и использую следующий код: 

gold = gold - 5 
KILLOBJ gold_index 
ADDOBJ 'Деньги - ' + STR(gold), gold_index 
SHOWOBJS 1 

то я получаю две строчки в инвентаре: 
Деньги - 15 золотых 
Деньги - 10 золотых 

В чем моя ошибка? Разве нельзя удалять предмет из инвентаря по индексу?

=Aleks Versus=
На этот вопрос много отвечали, но, и это странно, не дали вразумительного ответа. Я протестировал код, и он вообще-то работает. Т.е. предмет можно удалять по индексу.

Что в свою очередь означает, что у автора ошибка была где-то ещё. Например он удалял ещё какой-то предмет из списка перед тем, как изменить значение денег.
---------------------------------------------------------------------
=Lexian13=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=177&prc=25&Itemid=57#p24014
В своей игре использую объект Зелья. Хочу что бы в запасе было несколько. Но чтоб не забивать инвентарь. 
Пытался использовать библиотеку с этого сайта. Но не могу понять как сделать меню объекта. 
А с деньгами, чтобы несколько сразу... (Про деньги не обязательно, я их и по-другому могу сделать с отображением в доп.описании, просто хочется однотипности в игре.) 
Помогите кто-нибудь...

=Aleks Versus=
Веди подсчёт зелий в отдельной переменной. Когда изменяешь количество зелий, удаляй старый предмет, добавляй новый. 

Код:
! удаляем старый предмет 
delobj "Зелья: <<количество_зелий>>" 
! изменяем количество зелий (добавляем два) 
количество_зелий += 2 
! добавляем новый предмет 
addobj "Зелья: <<количество_зелий>>"
Чтобы меню работало, нужно проверять не полное название, а часть: 

Код:
if instr($selact,"Зелья:")<>0: 
! если выделенный предмет содержит строку "Зелья:", выполняем: 
! ...
=Aleks Versus=
http://qsp.su/index.php?option=com_agora&task=topic&id=40&p=224&prc=25&Itemid=57#p26370
Почему же никто не пользуется поиском?
Десять минут чтения выдачи расширенного поиска по запросу "ARGS" (по сообщениям): 
 Спойлер Show Spoiler Hide Spoiler
 Форум: Обсуждение и разработка игр 03.Ноя.16 13:29:00 — тема "Как сделать?" 
args[] - это переменные, которым можно передавать значения "на один раз". Делал ты это так: 
Код:
gosub 'Скретч диалог',2
Двойка после запятой, как раз и указывает, что когда плеер обратится к локации "Скретч диалог", значение args[0] - должно быть равно 2. Это называется передача аргументов. Можно передавать девять значений, т.е. задавать на начало локации значения переменным от args[0] до args[8]. В общем виде это выглядит так: 

Код:
gosub 'имя_локации',args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]
Форум: Обсуждение и разработка игр 28.Фев.16 23:34:46 — тема "Как сделать?" 

массив args[] можно использовать в качестве локальных переменных на определённой локации. Помимо этого в массив args[] передаются аргументы, если вызываешь локацию разными командами. Например: 

Код:
!#гостинная 
act 'Воспользоваться камнем телепортации': goto 'кухня', 7
Число семь будет передано в локацию кухня. Получить его в этой локации можно из нулевого элемента массива args[] 


Код:
!#кухня 
if args[0]=7: *pl "Вы воспользовались камнем телепортации и очутились в кухне."
Для каждой локации значения args[] своё. Т.е. если на локации "гостинная" у тебя args[0] равнялось 10, то это никак не скажется на значении args[0] в локации "кухня". Пример: 

Код:
#начало 
args[0] = 9 
args[1] = 12 
gosub 'конец',14,15 
*pl args[0] 
*pl args[1] 
- 

#конец 
*pl args[0] 
*pl args[1] 
-
Справка — Пользовательские функции и процедуры http://wiki.qsp.su/help:organizing

Полезная тема: вложенные вызовы подпрограмм http://qsp.su/index.php?option=com_agora&task=topic&id=373&Itemid=57

Форум: Обсуждение и разработка игр 10.Апр.16 22:57:53 — тема "Как сделать?" 

args - это локальные переменные. Они работают только на определённой локации и только во время так сказать сессии на этой локации. Так же они используются для получения каких-то данных во время обращения к локации. Например: 
Код:
goto 'Лес','Заяц',23
, при выполнении этой команды будет осуществлён переход на локацию "Лес", при этом переменной $args[0] на локации "Лес" присвоится значение Заяц, а переменной args[1] - значение 23. 

Если ты делаешь по этому http://qsp.su/index.php?option=com_content&view=article&id=72:-11&catid=36:2009-02-19-06-11-21&Itemid=76 примеру, можешь видеть, что переключение между ветками там задаётся как раз таки значением, которое получает args[0] при обращении к локации: 

Код:
gs 'Диалог_А',1 
.... 
if args[0]=1: 
    act 'Как реализован твой диалог?': 
        '<font color=blue>(Вы) — <<$selact>></font>' 
        cla 
        wait 500 
        ........
Стакающиеся предметы — это считаемые, как я понимаю. Деньги, патроны, одинаковые мечи и прочее. Тема довольно интересная и сложная. Но новичкам обычно предлагают начать с этого: 

убрал тут цитату сообщения, почему-то ведёт всё на библиотечку 
В старой справке был такой вопрос "Как сделать в игре деньги?". Но сейчас я не могу его найти. 

Всё на самом деле просто. Допустим, есть у нас предмет "меч". 

Когда добавляем его в инвентарь, например, по действию, то ведём подсчёт числа мечей в отдельной переменной. 
Код:
act "Поднять меч": 
   ! проверяем есть ли мечи 
   if меч_количество = 0: 
      ! если мечей нет, добавляем меч в инвентарь 
      addobj "Меч" 
   end 
   ! увеличиваем количество мечей на 1 
   меч_количество = меч_количество+1 
end
Чтобы проверять число мечей при щелчке в окне инвентаря, заводим локацию с названием onObjSel, а на самой первой локации в игре пишем: 

Код:
$onobjsel="onObjSel"
Если воспользоваться поиском по форуму с запросом "onobjsel", можно узнать, что таким образом мы создали локацию-обработчик выбора предмета с именем onObjSel, а с помощью строчки кода в самой первой локации игры показали плееру, какую именно локацию он должен использовать в этом качестве. 
Теперь на локации onObjSel для меча пишем такой код: 

Код:
if $selobj = "Меч": 
! если вы выбрали объект меч 
   ! выводим информацию в окно доп.описаний 
   pl "Обычный одноручный меч. В рюкзаке <<меч_количество>> шт." 
end
в конце onObjSel обязательно ставим

Код:
unsel