регулярные выражения
---------------------------------------------------------------------------------------
=Hinkmar=
https://qsp.org/index.php?option=com_agora&task=topic&id=40&p=199&prc=25&Itemid=57#p25363
Здравствуйте. 
Прошу совета по модификаторам регулярных выражений. Есть вот такой код: 

Код:
$text='Текст 
с 
разрывами 
строки' 

strfind($text, '.*')
Этот код выводит на экран только слово "Текст", потому что символ перевода строки по умолчанию точкой не охватывается. Мне же нужно вывести всё, что лежит в переменной, а не только первую строку. Для этого нужно использовать модификатор s, но примера использования модификаторов в справке нет, а методом тыка у меня что-то ничего не вышло. Подскажите, как его использовать.

=Aleks Versus=
я чтобы выбирать весь текст использую конструкцию

Код:
[\s\S]*
не подойдёт? 

Нашёл из старых опытов. Попробуй тоже в скобки заключить: 

Код:
$strfind("суббОта",'(?i:суббота)')
без скобок не работает. 
и так работает 

Код:
$strfind("суббОта",'(?i)суббота(?-i)')
---------------------------------------------------------------------------------------
=NickoAilus=
https://qsp.org/index.php?option=com_agora&task=topic&id=40&p=206&prc=25&Itemid=57#p26144
Нужна помощь с regexp`ами. Дело в том... ...что я тупо не понимаю, как их использовать! 

Примеров по их юзанию в коде нигде нет (или я их не нашёл), поэтому всё пробовал методом проб и ошибок. Создаётся ощущение, что интерпретатор QSP просто не воспринимает регекспы как часть кода, для него это только ошибки синтаксиса. Испытал всё - заключал в фигурные скобки, в кавычки, в ' и ', словом сделал всё, что только мог. Толку - 0. Подаю сигнал SOS и жду помощи. Если не утону к чертям в ближайшее время. 

С уважением, 
N_A

=Aleks Versus=
Регэкспы используются с функциями $strfind, strcomp, arrcomp, strpos. В старой справке об этом говорится, в новой (сейчас посмотрел) нет перекрёстных ссылок между разделами. Собственно всё просто, но понимание приходит с опытом. 
Показываю, как пользуюсь я. 

 Спойлер Show Spoiler Hide Spoiler
 Есть текст: 

Примеров по их юзанию в коде нигде нет (или я их не нашёл), поэтому всё пробовал методом проб и ошибок. Создаётся ощущение, что интерпретатор QSP просто не воспринимает регекспы как часть кода, для него это только ошибки синтаксиса. Испытал всё - заключал в фигурные скобки, в кавычки, в ' и ', словом сделал всё, что только мог. Толку - 0. Подаю сигнал SOS и жду помощи. Если не утону к чертям в ближайшее время.

нужно найти в нём слово из трёх букв. 
Смотрим справку: 

Справка написал(а):
\b - граница слова 
\w - буква или цифра или символ подчёркивания
Пишем код: 

Код:
! помещаем текст в переменную для удобства 
$text="Примеров по их юзанию в коде нигде нет (или я их не нашёл), поэтому всё пробовал методом проб и ошибок. Создаётся ощущение, что интерпретатор QSP просто не воспринимает регекспы как часть кода, для него это только ошибки синтаксиса. Испытал всё - заключал в фигурные скобки, в кавычки, в ' и ', словом сделал всё, что только мог. Толку - 0. Подаю сигнал SOS и жду помощи. Если не утону к чертям в ближайшее время. " 
! ищем слово из трёх букв с помощью strfind 
$strfind($text,'\b\w\w\w\b')
В тексте будет найдено первое вхождение, соответствующее этому регэкспу, то есть слово "нет". 
Регэксп можно изменить. Во-первых, не обязательно писать \w\w\w — есть специальный квантификатор. Он позволяет указать число повторяющихся символов или групп (вхождений): 

Справка написал(а):
{n} — n вхождений
Теперь регэксп выглядит так: 
\b\w{3}\b 
используем: 

Код:
$strfind($text,'\b\w{3}\b')
Или мы хотим найти слово из трёх букв, но чтобы второй символ не был буквой "е". Тут справка нас немного запутает: 

Справка написал(а):
[] — Класс символа
вот тут кусочек более понятный: 

Справка написал(а):
Для описания таких подмножеств применяются символы квадратных скобок "[" и "]". Квадратные скобки, встреченные внутри регулярного выражения считаются одним символом, который может принимать значения, перечисленные внутри этих скобок.
и ещё: 

Справка написал(а):
Символ "^". Если этот символ стоит первым в секции задания подмножества символов (и только в этом случае!) он будет рассматриваться как символ отрицания.
Таким образом, чтобы найти слово из трёх символов, второй из которых, не "e", можно составить такое регулярное выражение: 
\b\w[^е]\w\b 
Используем: 

Код:
$strfind($text,'\b\w[^е]\w\b')
Так мы найдём слово "или". 
Вообще, с помощью метасимвола \w мы указывали, что нас устроит в слове или буква или цифра или символ подчёркивания, но что если у нас в тексте есть такие сочетания 1_г и мы не хотим их находить? С помощью тех же квадратных скобок можно указать наборы символов, среди которых нужно производить поиск: 
\b[А-Яа-я]{3}\b 
Используем новые знания: 

Код:
! найдёт слово "нет" 
$strfind($text,'\b[А-Яа-я]{3}\b') 
! найдёт слово "или" 
$strfind($text,'\b[А-Яа-я][A-Да-дЖ-Яж-я][А-Яа-я]\b') 
! исключил букву "ё" потому что маленькая "ё" приводит к ошибке компиляции регэкспа у меня
Ну а для более широкого понимания, как составлять регэкспы, нужно копать интернет.
---------------------------------------------------------------------------------------
=NickoAilus=
https://qsp.org/index.php?option=com_agora&task=topic&id=40&p=209&prc=25&Itemid=57#p26426
Небольшая проблемка... насчёт команды strfind. 
Я хочу сделать игру про хакеров, с элементами парсера. Объясните, что с этим кодом не так? 

Код:
if strfind($usrtxt, '\W\d\d\d\d', 0) = '#2199' and strfind($usrtxt, '^\w\w\w\w********', 0) = 'stat device': 
        'Тестинг' 
end
При наборе "stat device #2199" должно писать "Тестинг". 
Суть в том, что мне хочется показать, что символ может присутствовать, а может и не присутствовать. А может там вообще пробел будет. С таким кодом 

Код:
if strfind($usrtxt, '\W\d\d\d\d', 0) = '#2199' and strfind($usrtxt, '^\w\w\w\w?.?.?.?.?.?.?.', 0) = 'stat device': 
    'Тестинг' 
end
всё работает, но только тогда, когда длина найденного текста равна 11 символам. 

Что мне делать?! Я уже по стенам начинаю ходить. Либо мне надо делать отдельные "if-ы" для каждой команды (а их там будет ого-го), либо забить на всё и начать делать другую игру. 


P. S. Страшное выражение '^\w\w\w\w?(\w|\W)?(\w|\W)?(\w|\W)?(\w|\W)?(\w|\W)?(\w|\W)?(\w|\W)' тоже не сработало как нужно.

=Aleks Versus=
надо проверить условия отдельно. Вообще лучше регэкспы тестировать не в готовой игре, а в чистом поле, чтобы проверить их работоспособность. 
Запускаем и проверяем 

Код:
$usrtxt_1='stat device #2199' 
':'+$strfind($usrtxt_1, '\W\d\d\d\d', 0)+':' 
! :#2199: 
':'+$strfind($usrtxt_1, '^\w\w\w\w********', 0)+':' 
! :stat:
Видишь в чём проблема? * — это не множество, не класс, а КВАНТИФИКАТОР, указывающий на 0 и более вхождений. 
Твой регэксп должен выглядеть так: 

Код:
^\w\w\w\w\s\w+
Или лучше так: 

Код:
^\w{4}\s\w+
{4} это тоже квантификатор. И +. Квантификаторы указывают количество вхождений. 
В итоге код: 

Код:
if $strfind($usrtxt,'\W\d{4}')='#2199' and $strfind($usrtxt,'^\w{4}\s\w+')='stat device': 
    'Тестинг' 
end
-------------------------------------------------------------------------
=NickoAilus=
https://qsp.org/index.php?option=com_agora&task=topic&id=40&p=213&prc=25&Itemid=57#p26679
Рукожоп бьёт тревогу и просит о помощи. Нужно сделать так, чтобы $strfind находил в $usrtxt последовательность из "непустых" символов, находящуюся в конце строки. Пробовал так: 


Код:
if $strfind($usrtxt,'^\w{2,9}\s?\w+')='run' and $strfind($usrtxt, '$\s\S{18,33}')=' root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
так: 


Код:
if $strfind($usrtxt,'^\w{2,9}\s?\w+')='run' and $strfind($usrtxt, '$\S{18,33}')=' root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
и даже так: 


Код:
if $strfind($usrtxt,'^\w{2,9}\s?\w+')='run' and $strfind($usrtxt, '$\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*}')=' root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
Ничего не работать. :-(

=oleksandrigo=
"sss ssss sss root/SD_Disk_2_GB/2.protocol" 
$regex = '\S+$' 

$strfind($maintxt, $regex)
Вроде работает

=NickoAilus=
Со строкой "run root/SD_Disk_2_GB/2.protocol" не сработало. Возможно, дело в $usrtxt?

=NickoAilus=
Псст. Решение вроде бы найдено, но оно немного кривоватое. 

Вот, какая строка должна была задействовать код: "run root/SD_Disk_2_GB/2.protocol". Но на деле работает только эта строка: "run  root/SD_Disk_2_GB/2.protocol" (обратить внимание на два пробела). 

Код: 


Код:
$regex = '\s\S+$' 

if $strfind($usrtxt,'^\w{2,9}\s?\w+')='run' and $strfind($user_text, $regex)=' root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
Может ли кто-нибудь подсказать, как изменить эту ситуацию? Сразу скажу, что код 

Код:
$regex = '\S+$' 

if $strfind($usrtxt,'^\w{2,9}\s?\w+')='run' and $strfind($user_text, $regex)='root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
тоже работает лишь с двумя пробелами.

=oleksandrigo=
$regex = '\S+$' 

$strfind($usrtxt,'^\w{2,9}\w+') 
$strfind($user_text, $regex) 


if $strfind($usrtxt,'^\w{2,9}\s?\w+') = 'run' and $strfind($user_text, $regex)=' root/SD_Disk_2_GB/2.protocol': 
    if disk = 1 and $diskname = 'SD_Card_2_GB': 
        if дым = 1: дым = 0 
        pl 'Протокол успешно запущен...' 
        p 'Выполняю... |||' 
        wait 700 
        p '|||||' 
        wait 700 
        pl '|||' 
        wait 700 
        pl 'Готово.' 
    end 
    'test' 
end
Оно?

=Aleks Versus=
вместо того, чтобы ковырять весь код целиком, рекомендую проверять регэкспы, создав отдельный файл qsp. 

Не совсем понимаю поставленную задачу. 
Если в строке присутствует несколько слов (под словом подразумеваются кусочки текста, не содержащие пробельные символы), их легко выбрать в массив: 

Код:
killvar '$input_text_word' 
$args['string']=$user_text 
:BALOON 
if len($args['string'])>0: 
    $input_text_word[]=$TRIM($strfind($args['string'],'\s*\S+\s*')) 
    $args['string']=$TRIM($replace($args['string'],$strfind($args['string'],'\s*\S+\s*'))) 
    jump 'BALOON' 
end
никаких премудростей. Теперь просто проверяешь соответствующие ячейки: 

Код:
if $input_text_word[0]='run' and $input_text_word[1]='root/SD_Disk_2_GB/2.protocol': 
    ! код ...
если нужно проверить точное соответствие. 

Более того, не увлекайтесь регэкспами в QSP. Везде, где можно обойтись без регэкспа, делайте без регэкспа. Я как-то увлёкся так, что игра повисала при попытке выбрать строку, а я грешил на бесконечный цикл.