
[Назад: Строки](help:strings)

==Регулярные выражения==
[:help_regexp]

[:reguljarnye_vyrazhenija]

Регулярные выражения в QSP используются при работе со [специальными функциями](help:strings#funkcii_ispolzujuschie_reguljarnye_vyrazhenija).

Также см. [Самоучитель по регулярным выражениям](../regex/start.html).

Два полезных сайта:

	*  [http://regexcrossword.com/](http://regexcrossword.com/)
	*  [http://regex101.com/](http://regex101.com/)
Основные поддерживаемые в QSP операции при записи регулярных выражений (для более подробной информации смотрите помощь по регулярным выражениям (PCRE)):

Метасимволы

`\`Экранирующий символ

`|`Выбор из альтернатив

`()`Группировка

`[]`Класс символа

Фиксаторы

`^`Начало строки

`$`Конец строки

`\b`Граница слова

`\B`Не граница слова

Квантификаторы

``*0 или более вхождений

`+`1 или более вхождений

`?`0 или 1 вхождение

`{n}`Ровно n вхождений

`{n,}`От n вхождений и более

`{,m}`От 0 до m вхождений

`{n,m}`От n до m вхождений

`*?` "Ленивое" ``*

`+?`"Ленивое" `+`

`??`"Ленивое" `?`

`{n}?`"Ленивое" `{n}`

`{n,}?`"Ленивое" `{n,}`

`{,m}?`"Ленивое" `{,m}`

`{n,m}?`"Ленивое" `{n,m}`

Спецсимволы

`\t`Табуляция

`\n`Перевод строки

`\r`Возврат каретки

Предопределенные классы символов

`.`Любой символ

`\w`Буква, цифры или символ подчёркивания

`\W`Не входит в `\w`

`\s`Пробельный символ

`\S`Не пробельный символ

`\d`Цифра

`\D`Не цифра

`\h`Шестнадцатиричная цифра

`\H`Не входит в `\h`

Свойства символов

`\p{имя свойства}`Свойство

`\p{^имя свойства}`Отрицание

`\P{имя свойства}`Отрицание

Возможные названия свойств:
`Alnum, Alpha, Blank, Cntrl, Digit, Graph, Lower, Print, Punct, Space, Upper, XDigit, Word, ASCII`

Также поддерживаются обратные ссылки: `\n`, где n - номер группы

--Функции использующие регулярные выражения--
[:funkcii_ispolzujuschie_reguljarnye_vyrazhenija]

	*  `STRCOMP(`[$строка]`,`[$шаблон]`)` - проводит сравнение строки [$строка] на соответствие регулярному выражению [$шаблон]. Возвращает -1, если строка соответствует шаблону, иначе 0. Сравни с функцией "STRFIND".
	*  `STRFIND(`[$строка]`,`[$шаблон]`,`[#номер]`)` - возвращает подстроку в строке [$строка], соответствующую группе с номером [#номер] регулярного выражения [$шаблон].
		*  Если подстрока с указанным номером отсутствует, то возвращается пустая строка.
		*  Нумерация групп подстрок начинается с 1.
		*  Если параметр [#номер] отсутствует или равен 0, то возвращаются подстрока, соответсвующая всему регулярному выражению.
		*  Примеры:
```qsp

STRFIND(' идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 0) &! ''
STRFIND('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 1)  &! 'идти'
STRFIND('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 2)  &! 'к'
STRFIND('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 3)  &! 'пещере'
STRFIND('идти к дому', 'к\s(\S+)', 0) &! 'к дому' 
STRFIND('идти к дому', 'к\s(\S+)')    &! 'к дому'
STRFIND('идти к дому', 'к\s(\S+)', 1) &! 'дому'
STRFIND('идти к своему дому', 'к\s(\S+)', 1) &! 'своему'

```

	*  `STRPOS(`[$строка]`,`[$шаблон]`,`[#номер]`)` - возвращает позицию символа, с которого начинается вхождение подстроки в строку [$строка], соответствующей группе с номером [#номер] регулярного выражения [$шаблон].
		*  Если подстрока с указанным номером отсутствует, то возвращается 0.
		*  Нумерация групп подстрок начинается с 1.
		*  Если параметр [#номер] отсутствует или равен 0, то возвращается позиция символа, с которого начинается вхождение подстроки, соответствующей всему регулярному выражению.
		*  Примеры:
```qsp

STRPOS(' идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 0) &! 0
STRPOS('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 1)  &! 1
STRPOS('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 2)  &! 6
STRPOS('идти к пещере', '^(\S+)\s(\S+)\s(\S+)$', 3)  &! 8
STRPOS('идти к пещере', '^(\S+)\s(\S+)(\s(\S+))?$', 4) &! 8
STRPOS('идти к дому', 'к\s(\S+)', 0) &! 6
STRPOS('идти к дому', 'к\s(\S+)')    &! 6
STRPOS('идти к дому', 'к\s(\S+)', 1) &! 8
STRPOS('идти к своему дому', 'к\s(\S+)', 1) &! 8

```

[Вперёд: Условия](../help/conditional.html)

