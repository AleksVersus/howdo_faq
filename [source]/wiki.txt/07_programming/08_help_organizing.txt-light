
[Назад: Условия](help:conditional)

==Пользовательские функции и процедуры==
[:help_organizing]

[:polzovatelskie_funkcii_i_procedury]

	*  `GOSUB` [$локация]`,`[параметр 1]`,`[параметр 2]`, …`
	*  `GS` [$локация]`,`[параметр 1]`,`[параметр 2]`, …` - обработка локации с названием [$локация]. 
		*  Основное описание и список действий локации добавляются к описанию и действиям старой локации.
		*  Происходит выполнение операторов в поле "Выполнить при посещении"
		*  Переданные параметры хранятся в массиве ARGS. Максимальное количество параметров - `9`[1)](#fn__1).
		*  Затем продолжение выполнения программы со следующей команды после GS/GOSUB.
		*  `Внимание:` Код, выполняемый по оператору ACT, считается отдельным блоком кода:
```qsp

GS 'переход', 'локация'

#переход
*PL $ARGS[0]  &! На экран выведется 'локация'
ACT 'Перейти':
  GT $ARGS[0] &! Работать не будет, т.к. массив ARGS пуст
END

```

		*  Примеры:
```qsp

!обработка локации "ход". Массив ARGS пуст.
GS 'ход'

!обработка локации с названием из переменной $loc
!Передаётся один параметр - ARGS[0] равен 1.
GS $loc,1

!обработка локации "ход" с передачей 3-х параметров. 
! $ARGS[0] = $var (значению), ARGS[1] = 2, 
! $ARGS[2] = "данные". Обратите внимание на символы '$'.
GS 'ход',$var,2,'данные'

```

	*  `FUNC(`[$локация]`,`[параметр 1]`,`[параметр 2]`, …)` - обработка локации с названием [$локация] аналогично оператору GS (GOSUB), но с возвращением значения.
		*  Основное описание и список действий локации добавляются к описанию и действиям старой локации.
		*  Происходит выполнение операторов в поле "Выполнить при посещении"
		*  Переданные параметры хранятся в массиве ARGS. Максимальное количество параметров - `9`[2)](#fn__2).
		*  Результат функции равен значению $RESULT при возврате строкового значения или RESULT при возврате числового значения. 
		*  Если при обработке локации были установлены и RESULT, и $RESULT, то предпочтение отдаётся строковому значению. 
		*  После обработки локации предыдущие значения ARGS и RESULT восстанавливаются. 
		*  `Внимание:` при использовании в коде локации-функции операторов GS/DYNAMIC переменные RESULT и $RESULT могут перезаписываться кодом, выполняемым этими операторами.
			*  Исправлено в более новых версиях интерпретатора. 
		*  Примеры:
```qsp

!Обработка локации "функция" как функции. 
!Массив ARGS пуст. 
!Результат передается через $RESULT или RESULT
!в зависимости от кода обрабатываемой локации.
яблоки = FUNC('функция')

!обработка локации с названием в $name как функции. ARGS[0] равен 1.
PL FUNC($name, 1) * 78

!обработка локации с названием в $name как функции. 
!$ARGS[0] содержит строку "строка", ARGS[1] равен 2.
MSG "text" + FUNC($name, "строка", 2)

```

	*  `EXIT` - завершение выполнения текущего кода (преждевременный выход из подпрограммы / обработчика какого-либо события…).
		*  Примеры:
```qsp

if args[0] = 0: exit

```

[Вперёд: Переходы внутри локации, циклы](../help/jump.html)

[1)](#fnt__1) 
, [2)](#fnt__2) 
10 включая имя локации

