/**
 * SyntaxHighlighter
 * http://alexgorbatchev.com/
 *
 * SyntaxHighlighter is donationware. If you are using it, please donate.
 * http://alexgorbatchev.com/wiki/SyntaxHighlighter:Donate
 *
 * @version
 * 2.0.320 (May 03 2009)
 * 
 * @copyright
 * Copyright (C) 2004-2009 Alex Gorbatchev.
 *
 * @license
 * This file is part of SyntaxHighlighter.
 * 
 * SyntaxHighlighter is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * SyntaxHighlighter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with SyntaxHighlighter.  If not, see <http://www.gnu.org/copyleft/lesser.html>.
 */
SyntaxHighlighter.brushes.Qsp = function()
{

	var keywords =	'pl clear clr p nl msg wait act delact cla cmdclear cmdclr cls menu settimer dynamic set let killvar copyarr addobj delobj killobj unselect unsel ' +
					'killall opengame openqst addqst killqst savegame refint showacts showinput showobjs showstat if else elseif exit end jump gosub gs goto gt xgoto ' +
					'xgt play close view and or obj loc no mod desc iif input isplay max min rand rgb getobj dyneval ' +
					'func arrsize arrpos instr isnum trim ucase lcase len mid replace str val arrcomp strcomp strfind ' +
					'strpos countobj msecscount rnd curloc qspver selobj selact curacts user_text usrtxt ' +
					'maintxt stattxt args result disablescroll disablesubex nosave debug ' +
					'usehtml bcolor fcolor lcolor fsize';

	var keywords2 =	'desc iif input max min getobj dyneval ' +
					'func trim ucase lcase mid replace str ' +
					'strfind curloc qspver selobj selact curacts user_text ' +
					'usrtxt maintxt stattxt args result counter ongload ongsave onnewloc ' +
					'onactsel onobjsel onobjadd onobjdel usercom fname backimage';

	this.getKeywords2 = function(str)
	{
		str = str
			.replace(/^\s+|\s+$/g, '')
			.replace(/\s+/g, '\\b|\\$\\b')
			;
		
		return '\\$\\b' + str + '\\b';
	};

	this.regexList = [
		{ regex: /^[\s\t]*!.*/gm,									css: 'color1' },			// one line comments
		{ regex: /\b[\d]+\b/gi,										css: 'color2' },				// numbers
		{ regex: /^[\s\t]*:[^&\n]+/gm,								css: 'color3' },				// labels
		{ regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString,		css: 'comments' },			// strings
		{ regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString,		css: 'comments' },			// strings
		{ regex: new RegExp(this.getKeywords(keywords), 'gmi'),		css: 'keyword' },
		{ regex: new RegExp(this.getKeywords2(keywords2), 'gmi'),		css: 'keyword' }
		];
};

SyntaxHighlighter.brushes.Qsp.prototype = new SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Qsp.aliases = ['qsp'];
